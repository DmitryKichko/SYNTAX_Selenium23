======================================================================================================

Implicit wait (Неявное ожидание):
-- будет применяться только для метода findElement()

Explicit wait (Явное ожидание) или WebDriver Wait:
-- используется для указания веб-драйверу ждать определенного условия
перед тем, как выбросить исключение для указанного условия

Explicit wait (Явное ожидание) работает с классом ExpectedConditoions и
ожидает, пока не будут выполнены определенные условия или не будет достигнуто заданное время.

 WebDriverWait wait = new WebDriverWait(driver, 20);
 wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//p[contains(text(), 'First Name')]")));
// для использования Explicit wait (явного ожидания) нам нужно создать объект и указать условия


Знак * в xpath - это "дикая карта", которая может идентифицировать любое имя тега.
Пример: //*[contains(text(), 'Welcome')].

Fluent Wait --> глобальное ожидание (используется редко)
используется для указания webdriver ждать определенного условия, а также его частоты
прежде чем выбросить исключение

Пример:

WebDriver driver = new ChromeDriver();
        Wait<WebDriver> wait = new FluentWait<WebDriver>(driver) // создаем FluentWait
                .withTimeout(Duration.ofSeconds(20))  // указываем время сколько ожидать
                .pollingEvery(Duration.ofSeconds(5))  // указываем период (то есть будет ожидать каждые 5 секунд до 20 секунд)
                .ignoring(NoSuchFrameException.class); // указываем условие какое исключение должно быть проигнорированно

WebTables:
WebTables - это элементы на веб-странице, которые строятся путем наличия
строки и столбца

Типы веб-таблиц:
1. Статические веб-таблицы
2. Динамические веб-таблицы

Веб-таблицы состоят из различных разделов или частей:
<table>
       <thead>
               <tr>
                   <th></th> --> данные столбца или заголовок
               </tr>
       </thead>
       <tbody>
              <tr>
                  <td></td> --> данные таблицы
              </tr>
       </tbody>
</table>

HW1:
перейдите на https://the-internet.herokuapp.com/dynamic_controls
нажмите на флажок и нажмите на удалить
проверьте текст
нажмите на кнопку включить, чтобы убедиться, что поле включено
введите текст и нажмите отключить
проверьте, что текстовое поле отключено

создайте пакет и назовите его utils
создайте класс и назовите его CommonMethods
создайте функции (методы) для открытия и закрытия браузеров