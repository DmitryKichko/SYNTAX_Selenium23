=============================================================================================================

Если обычный щелчок не работает, вы можете использовать альтернативный способ - метод щелчка класса Actions
Пример:

//editOption.click(); // в очень редких случаях если click() не сработает можно попробовать использовать action

    action.click(editOption).perform();


Загрузка документов:

-- Для загрузки документов с помощью selenium мы можем просто сделать sendKeys(filePath).
--------------------------------------------------------------------------------------------------------
WebElement chooseFile = driver.findElement(By.id("file-upload"));
        chooseFile.sendKeys("/Users/dmitry_kichko/Desktop/Снимок экрана 2023-09-13 в 16.05.11.png");
--------------------------------------------------------------------------------------------------------
 sendKeys("указываем путь к нашему файлу") // необходимо помнить что в конце пути нашего файла необходимо указать формат файла .png и т.д.

-- Если sendKeys не работает, вы можете использовать класс Robot

JavaScriptExecutor
Это библиотека в selenium, которая может быть выполнена в различных языках программирования (java, c#, python и т.д.).

JSExecutor - это интерфейс.

Действия, которые можно выполнить с помощью JSExecutor:
- щелчок по элементу
- прокрутить страницу
- обновить страницу
- выделить элемент
- прокрутить страницу до определенного элемента
- открыть новую вкладку

Пример:

-------------------------------------------------- Выделение строки ------------------------------------------------------

JavascriptExecutor js = (JavascriptExecutor)driver;
        js.executeScript("arguments[0].style.backgroundColor='red'", password);



 -- js.executeScript("действие которое мы выполняем", указание веб-элемента);
 -- "arguments[0].style.backgroundColor='red'"   - это аргумент который выделит нашу троку в красный цвет (цвет мы можем назначить любой)


-------------------------------------------------- Нажатие на кнопку ------------------------------------------------------

JavascriptExecutor js = (JavascriptExecutor)driver;

WebElement loginButton = driver.findElement(By.id("btnLogin"));

        js.executeScript("arguments[0].click", loginButton);

--  js.executeScript("действие которое мы выполняем", указание веб-элемента);
-- "arguments[0].click" - это аргумент который нажмет на кнопку

----------------------------------------------------- Прокрутка страницы ------------------------------------------------------

JavascriptExecutor js = (JavascriptExecutor)driver;

        js.executeScript("window.scrollBy(0, 500)");

-- "window.scrollBy(0, 500)" - это аргумент который прокрутит страницу вниз.

(0) - это начальная точка
(500) - конечная точка ( прокрутит вниз (значения можем менять, мы его сами подбираем))
(-500) - конечная точка ( прокрутит вверх (значения можем менять, мы его сами подбираем))

----------------------------------------------------- Прокрутка страницы до конкретного элемента ------------------------------------------------------

JavascriptExecutor js = (JavascriptExecutor)driver;

        WebElement backTop = driver.findElement(By.className("navFooterBackToTopText"));
        js.executeScript("arguments[0].scrollIntoView(true)" , backTop);

--  js.executeScript("действие которое мы выполняем", указание веб-элемента);
-- "arguments[0].scrollIntoView(true)" - это аргумент который прокрутит страницу.

----------------------------------------------------- Открытие новой вкладки ------------------------------------------------------

JavascriptExecutor js = (JavascriptExecutor)driver;
        js.executeScript("window.open();");

-- "window.open();" - это аргумент для открытия нового окна.

если мы используем JavaScript для открытия новых окон то selenium не фокусируется на новом окне, он так же остается сфокусированным
на первом окне, поэтому мы так же можем продолжить действия в первом окне

-----------------------------------------------------------------------------------------------------------

HW:
- открыть новый браузер
- открыть новую вкладку
- перейти на другой URL-адрес в новой вкладке

HW: TestNG и использование утверждений
ТК 1:
Проверка пустого пароля в HRMS:
- Перейдите на страницу "http://hrm.syntaxtechs.net/humanresources/symfony/web/index.php/auth/login".
- Введите правильное имя пользователя и оставьте поле пароля пустым
- Нажмите на кнопку входа
- Убедитесь, что отображается сообщение об ошибке с текстом "Пароль не может быть пустым".

TC 2:
Проверка пустого имени пользователя и пароля в HRMS:
- Перейдите на страницу "http://hrm.syntaxtechs.net/humanresources/symfony/web/index.php/auth/login".
- Оставьте поле имени пользователя и пароля пустым
- Нажмите на кнопку входа в систему
- Убедитесь, что отображается сообщение об ошибке с текстом "Имя пользователя не может быть пустым".

TC 3:
Проверка недействительных учетных данных в HRMS:
- Перейдите на страницу "http://hrm.syntaxtechs.net/humanresources/symfony/web/index.php/auth/login"
- Введите правильное имя пользователя и неправильный пароль
- Нажмите на кнопку входа в систему
- Отобразится сообщение об ошибке с текстом "Неверные учетные данные".

TC:4 -->
выполнить на проекте selenium:
- Перейдите на сайт http://www.uitestpractice.com/
- взаимодействовать с помощью drag and drop, iframe, двойного клика
- кликнуть на home
- удалить одного пользователя из таблицы
- перейти по следующей ссылке
- нажмите на ajax-ссылку и дождитесь появления текста
- убедитесь, что текст отображается
- перейдите к Форме
- и заполните все
- перейдите к виджетам
- загрузите любой файл и проверьте, что он загрузился
- перейдите к действиям и выполните все необходимые действия
- перейти в раздел Переключить
- работа с оповещениями и фреймами
- перейти к выбору
- выполнить действия со всеми выпадающими списками